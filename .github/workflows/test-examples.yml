name: Test Examples

on:
  workflow_dispatch:
    inputs:
      timeout_minutes:
        description: 'Timeout in minutes for each example'
        required: false
        default: '5'
        type: string
      run_all_examples:
        description: 'Run all examples (if false, only run basic ones)'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: read

jobs:
  test-examples:
    name: Test Examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create example test results directory
        run: mkdir -p example-test-results

      - name: Test US Grain Export Example
        id: test_grain_export
        continue-on-error: true
        run: |
          echo "Testing US Grain Export Example..."
          timeout ${{ inputs.timeout_minutes }}m python examples/us_grain_export_example.py > example-test-results/us_grain_export_output.txt 2>&1
          exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          if [ $exit_code -eq 0 ]; then
            echo "✅ US Grain Export Example: PASSED"
            echo "status=PASSED" >> $GITHUB_OUTPUT
          else
            echo "❌ US Grain Export Example: FAILED (exit code: $exit_code)"
            echo "status=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Test US Grain Market Forecast Example
        id: test_grain_forecast
        continue-on-error: true
        run: |
          echo "Testing US Grain Market Forecast Example..."
          timeout ${{ inputs.timeout_minutes }}m python examples/us_grain_market_forecast.py > example-test-results/us_grain_market_forecast_output.txt 2>&1
          exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          if [ $exit_code -eq 0 ]; then
            echo "✅ US Grain Market Forecast Example: PASSED"
            echo "status=PASSED" >> $GITHUB_OUTPUT
          else
            echo "❌ US Grain Market Forecast Example: FAILED (exit code: $exit_code)"
            echo "status=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Test Smart City Urban Planning Example
        id: test_smart_city
        continue-on-error: true
        if: ${{ inputs.run_all_examples == 'true' }}
        run: |
          echo "Testing Smart City Urban Planning Example..."
          timeout ${{ inputs.timeout_minutes }}m python examples/smart_city_urban_planning_example.py > example-test-results/smart_city_output.txt 2>&1
          exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          if [ $exit_code -eq 0 ]; then
            echo "✅ Smart City Urban Planning Example: PASSED"
            echo "status=PASSED" >> $GITHUB_OUTPUT
          else
            echo "❌ Smart City Urban Planning Example: FAILED (exit code: $exit_code)"
            echo "status=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Test Healthcare System Policy Example
        id: test_healthcare
        continue-on-error: true
        if: ${{ inputs.run_all_examples == 'true' }}
        run: |
          echo "Testing Healthcare System Policy Example..."
          timeout ${{ inputs.timeout_minutes }}m python examples/healthcare_system_policy_example.py > example-test-results/healthcare_output.txt 2>&1
          exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          if [ $exit_code -eq 0 ]; then
            echo "✅ Healthcare System Policy Example: PASSED"
            echo "status=PASSED" >> $GITHUB_OUTPUT
          else
            echo "❌ Healthcare System Policy Example: FAILED (exit code: $exit_code)"
            echo "status=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Test Global Supply Chain Resilience Example
        id: test_supply_chain
        continue-on-error: true
        if: ${{ inputs.run_all_examples == 'true' }}
        run: |
          echo "Testing Global Supply Chain Resilience Example..."
          timeout ${{ inputs.timeout_minutes }}m python examples/global_supply_chain_resilience_example.py > example-test-results/supply_chain_output.txt 2>&1
          exit_code=$?
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
          if [ $exit_code -eq 0 ]; then
            echo "✅ Global Supply Chain Resilience Example: PASSED"
            echo "status=PASSED" >> $GITHUB_OUTPUT
          else
            echo "❌ Global Supply Chain Resilience Example: FAILED (exit code: $exit_code)"
            echo "status=FAILED" >> $GITHUB_OUTPUT
          fi

      - name: Validate Example Outputs
        run: |
          echo "Validating example outputs..."
          
          # Check for expected patterns in US Grain Export Example
          if [ -f example-test-results/us_grain_export_output.txt ]; then
            if grep -q "Graph created with.*entities" example-test-results/us_grain_export_output.txt && \
               grep -q "SFM Analysis Examples" example-test-results/us_grain_export_output.txt && \
               grep -q "Most central actors" example-test-results/us_grain_export_output.txt; then
              echo "✅ US Grain Export Example output validation: PASSED"
            else
              echo "❌ US Grain Export Example output validation: FAILED - missing expected patterns"
            fi
          fi
          
          # Check for expected patterns in US Grain Market Forecast Example
          if [ -f example-test-results/us_grain_market_forecast_output.txt ]; then
            if grep -q "Graph created with.*entities" example-test-results/us_grain_market_forecast_output.txt && \
               grep -q "SFM Analysis Examples" example-test-results/us_grain_market_forecast_output.txt; then
              echo "✅ US Grain Market Forecast Example output validation: PASSED"
            else
              echo "❌ US Grain Market Forecast Example output validation: FAILED - missing expected patterns"
            fi
          fi
          
          # Check for expected patterns in Smart City Example (if run)
          if [ -f example-test-results/smart_city_output.txt ]; then
            if grep -q "SMART CITY URBAN PLANNING SFM ANALYSIS" example-test-results/smart_city_output.txt && \
               grep -q "Graph Structure Summary" example-test-results/smart_city_output.txt; then
              echo "✅ Smart City Urban Planning Example output validation: PASSED"
            else
              echo "❌ Smart City Urban Planning Example output validation: FAILED - missing expected patterns"
            fi
          fi

      - name: Test Edge Cases and Error Scenarios
        run: |
          echo "Testing edge cases and error scenarios..."
          
          # Test with corrupted Python path
          echo "Testing with modified Python path..."
          PYTHONPATH=/invalid/path python examples/us_grain_export_example.py > example-test-results/edge_case_pythonpath.txt 2>&1 || echo "Expected failure with invalid PYTHONPATH"
          
          # Test with missing dependencies (simulate by temporarily renaming a module)
          echo "Testing import error handling..."
          if [ -d "core" ]; then
            mv core core_backup
            python examples/us_grain_export_example.py > example-test-results/edge_case_import.txt 2>&1 || echo "Expected failure with missing core module"
            mv core_backup core
          fi
          
          # Test memory constraints (create a large graph scenario)
          echo "Testing memory constraints..."
          python -c "
          import sys
          from pathlib import Path
          workspace_root = Path('.')
          sys.path.insert(0, str(workspace_root))
          from core.sfm_models import Actor, SFMGraph
          from db.sfm_dao import NetworkXSFMRepository

          # Create a large graph to test memory usage
          repo = NetworkXSFMRepository()
          graph = SFMGraph()

          # Add many actors to test memory constraints
          for i in range(100):
              actor = Actor(label=f'Actor_{i}', sector='Test')
              repo.create_node(actor)
              graph.add_node(actor)

          print(f'Created large graph with {len(graph)} nodes')
          " > example-test-results/edge_case_memory.txt 2>&1

      - name: Generate Test Summary Report
        run: |
          echo "## Example Test Results Summary" > example-test-results/summary.md
          echo "" >> example-test-results/summary.md
          echo "### Test Configuration" >> example-test-results/summary.md
          echo "- Python Version: ${{ matrix.python-version }}" >> example-test-results/summary.md
          echo "- Timeout: ${{ inputs.timeout_minutes }} minutes" >> example-test-results/summary.md
          echo "- Run All Examples: ${{ inputs.run_all_examples }}" >> example-test-results/summary.md
          echo "- Test Date: $(date)" >> example-test-results/summary.md
          echo "" >> example-test-results/summary.md
          echo "### Test Results" >> example-test-results/summary.md
          echo "" >> example-test-results/summary.md
          
          # US Grain Export Example
          echo "#### US Grain Export Example" >> example-test-results/summary.md
          if [ "${{ steps.test_grain_export.outputs.status }}" == "PASSED" ]; then
            echo "- Status: ✅ PASSED" >> example-test-results/summary.md
          else
            echo "- Status: ❌ FAILED (exit code: ${{ steps.test_grain_export.outputs.exit_code }})" >> example-test-results/summary.md
          fi
          echo "" >> example-test-results/summary.md
          
          # US Grain Market Forecast Example
          echo "#### US Grain Market Forecast Example" >> example-test-results/summary.md
          if [ "${{ steps.test_grain_forecast.outputs.status }}" == "PASSED" ]; then
            echo "- Status: ✅ PASSED" >> example-test-results/summary.md
          else
            echo "- Status: ❌ FAILED (exit code: ${{ steps.test_grain_forecast.outputs.exit_code }})" >> example-test-results/summary.md
          fi
          echo "" >> example-test-results/summary.md
          
          # Smart City Example (if run)
          if [ "${{ inputs.run_all_examples }}" == "true" ]; then
            echo "#### Smart City Urban Planning Example" >> example-test-results/summary.md
            if [ "${{ steps.test_smart_city.outputs.status }}" == "PASSED" ]; then
              echo "- Status: ✅ PASSED" >> example-test-results/summary.md
            else
              echo "- Status: ❌ FAILED (exit code: ${{ steps.test_smart_city.outputs.exit_code }})" >> example-test-results/summary.md
            fi
            echo "" >> example-test-results/summary.md
            
            # Healthcare Example
            echo "#### Healthcare System Policy Example" >> example-test-results/summary.md
            if [ "${{ steps.test_healthcare.outputs.status }}" == "PASSED" ]; then
              echo "- Status: ✅ PASSED" >> example-test-results/summary.md
            else
              echo "- Status: ❌ FAILED (exit code: ${{ steps.test_healthcare.outputs.exit_code }})" >> example-test-results/summary.md
            fi
            echo "" >> example-test-results/summary.md
            
            # Supply Chain Example
            echo "#### Global Supply Chain Resilience Example" >> example-test-results/summary.md
            if [ "${{ steps.test_supply_chain.outputs.status }}" == "PASSED" ]; then
              echo "- Status: ✅ PASSED" >> example-test-results/summary.md
            else
              echo "- Status: ❌ FAILED (exit code: ${{ steps.test_supply_chain.outputs.exit_code }})" >> example-test-results/summary.md
            fi
          fi
          
          echo "" >> example-test-results/summary.md
          echo "### File Sizes" >> example-test-results/summary.md
          echo "\`\`\`" >> example-test-results/summary.md
          ls -la example-test-results/ >> example-test-results/summary.md
          echo "\`\`\`" >> example-test-results/summary.md
          
          echo "" >> example-test-results/summary.md
          echo "### Debugging Information" >> example-test-results/summary.md
          echo "For detailed output and error logs, check the uploaded artifacts." >> example-test-results/summary.md
          
          # Display summary
          cat example-test-results/summary.md

      - name: Check for Test Failures
        run: |
          failed_tests=0
          
          if [ "${{ steps.test_grain_export.outputs.status }}" == "FAILED" ]; then
            failed_tests=$((failed_tests + 1))
            echo "US Grain Export Example failed"
          fi
          
          if [ "${{ steps.test_grain_forecast.outputs.status }}" == "FAILED" ]; then
            failed_tests=$((failed_tests + 1))
            echo "US Grain Market Forecast Example failed"
          fi
          
          if [ "${{ inputs.run_all_examples }}" == "true" ]; then
            if [ "${{ steps.test_smart_city.outputs.status }}" == "FAILED" ]; then
              failed_tests=$((failed_tests + 1))
              echo "Smart City Urban Planning Example failed"
            fi
            
            if [ "${{ steps.test_healthcare.outputs.status }}" == "FAILED" ]; then
              failed_tests=$((failed_tests + 1))
              echo "Healthcare System Policy Example failed"
            fi
            
            if [ "${{ steps.test_supply_chain.outputs.status }}" == "FAILED" ]; then
              failed_tests=$((failed_tests + 1))
              echo "Global Supply Chain Resilience Example failed"
            fi
          fi
          
          echo "Total failed tests: $failed_tests"
          
          if [ $failed_tests -gt 0 ]; then
            echo "❌ One or more examples failed. Check the logs above for details."
            exit 1
          else
            echo "✅ All examples passed successfully!"
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: example-test-results
          path: example-test-results/
          retention-days: 30

      - name: Upload test summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: example-test-summary
          path: example-test-results/summary.md
          retention-days: 30